/*
 * Copyright (C) 2020 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * THIS FILE WAS GENERATED BY apic. DO NOT EDIT.
 */

#include "command_arguments.h"
#include "vulkan_metadata.h"

namespace Dive
{
template<VKCmdID I> struct CommandTypeInfo;
template<VKCmdID I> using CommandArgumentsType = typename CommandTypeInfo<I>::ArgumentsTy;
template<> struct CommandTypeInfo<VKCmdID::vkBeginCommandBufferCmdID>
{
    typedef BeginCommandBufferArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkEndCommandBufferCmdID>
{
    typedef EndCommandBufferArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdExecuteCommandsCmdID>
{
    typedef CmdExecuteCommandsArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdCopyBufferCmdID>
{
    typedef CmdCopyBufferArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdCopyImageCmdID>
{
    typedef CmdCopyImageArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdBlitImageCmdID>
{
    typedef CmdBlitImageArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdCopyBufferToImageCmdID>
{
    typedef CmdCopyBufferToImageArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdCopyImageToBufferCmdID>
{
    typedef CmdCopyImageToBufferArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdUpdateBufferCmdID>
{
    typedef CmdUpdateBufferArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdFillBufferCmdID>
{
    typedef CmdFillBufferArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdClearColorImageCmdID>
{
    typedef CmdClearColorImageArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdClearDepthStencilImageCmdID>
{
    typedef CmdClearDepthStencilImageArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdClearAttachmentsCmdID>
{
    typedef CmdClearAttachmentsArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdResolveImageCmdID>
{
    typedef CmdResolveImageArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdBindDescriptorSetsCmdID>
{
    typedef CmdBindDescriptorSetsArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdPushConstantsCmdID>
{
    typedef CmdPushConstantsArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdBindIndexBufferCmdID>
{
    typedef CmdBindIndexBufferArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdBindVertexBuffersCmdID>
{
    typedef CmdBindVertexBuffersArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdDrawCmdID>
{
    typedef CmdDrawArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdDrawIndexedCmdID>
{
    typedef CmdDrawIndexedArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdDrawIndirectCmdID>
{
    typedef CmdDrawIndirectArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdDrawIndexedIndirectCmdID>
{
    typedef CmdDrawIndexedIndirectArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdDispatchCmdID>
{
    typedef CmdDispatchArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdDispatchIndirectCmdID>
{
    typedef CmdDispatchIndirectArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdBindPipelineCmdID>
{
    typedef CmdBindPipelineArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdSetViewportCmdID>
{
    typedef CmdSetViewportArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdSetScissorCmdID>
{
    typedef CmdSetScissorArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdSetLineWidthCmdID>
{
    typedef CmdSetLineWidthArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdSetDepthBiasCmdID>
{
    typedef CmdSetDepthBiasArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdSetBlendConstantsCmdID>
{
    typedef CmdSetBlendConstantsArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdSetDepthBoundsCmdID>
{
    typedef CmdSetDepthBoundsArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdSetStencilCompareMaskCmdID>
{
    typedef CmdSetStencilCompareMaskArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdSetStencilWriteMaskCmdID>
{
    typedef CmdSetStencilWriteMaskArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdSetStencilReferenceCmdID>
{
    typedef CmdSetStencilReferenceArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdBeginQueryCmdID>
{
    typedef CmdBeginQueryArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdEndQueryCmdID>
{
    typedef CmdEndQueryArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdResetQueryPoolCmdID>
{
    typedef CmdResetQueryPoolArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdWriteTimestampCmdID>
{
    typedef CmdWriteTimestampArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdCopyQueryPoolResultsCmdID>
{
    typedef CmdCopyQueryPoolResultsArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdBeginRenderPassCmdID>
{
    typedef CmdBeginRenderPassArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdNextSubpassCmdID>
{
    typedef CmdNextSubpassArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdEndRenderPassCmdID>
{
    typedef CmdEndRenderPassArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdSetEventCmdID>
{
    typedef CmdSetEventArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdResetEventCmdID>
{
    typedef CmdResetEventArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdWaitEventsCmdID>
{
    typedef CmdWaitEventsArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdPipelineBarrierCmdID>
{
    typedef CmdPipelineBarrierArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdWriteBufferMarkerAMDCmdID>
{
    typedef CmdWriteBufferMarkerAMDArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdDrawIndirectCountAMDCmdID>
{
    typedef CmdDrawIndirectCountAMDArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdDrawIndexedIndirectCountAMDCmdID>
{
    typedef CmdDrawIndexedIndirectCountAMDArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdBeginDebugUtilsLabelEXTCmdID>
{
    typedef CmdBeginDebugUtilsLabelEXTArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdEndDebugUtilsLabelEXTCmdID>
{
    typedef CmdEndDebugUtilsLabelEXTArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdInsertDebugUtilsLabelEXTCmdID>
{
    typedef CmdInsertDebugUtilsLabelEXTArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdSetDeviceMaskKHRCmdID>
{
    typedef CmdSetDeviceMaskKHRArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdSetDeviceMaskCmdID>
{
    typedef CmdSetDeviceMaskArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdDispatchBaseKHRCmdID>
{
    typedef CmdDispatchBaseKHRArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdDispatchBaseCmdID>
{
    typedef CmdDispatchBaseArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdDrawIndirectCountKHRCmdID>
{
    typedef CmdDrawIndirectCountKHRArgs ArgumentsTy;
};
template<> struct CommandTypeInfo<VKCmdID::vkCmdDrawIndexedIndirectCountKHRCmdID>
{
    typedef CmdDrawIndexedIndirectCountKHRArgs ArgumentsTy;
};
}  // namespace Dive